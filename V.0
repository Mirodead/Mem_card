from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QWidget, QHBoxLayout, QVBoxLayout, QGroupBox, QRadioButton, QPushButton, QLabel, QButtonGroup
from random import shuffle, randint

class Question():
    def __init__(self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3

questions_list = []
questions_list.append(Question('Государственный язык Бразилии', 'Португальский', 'Бразильский', 'Испанский', 'Итальянский'))
questions_list.append(Question('Какой национальности не существует','Энцы','Смурфы','Чулымцы','Алеуты'))
questions_list.append(Question('Национальная хижина якутов','Ураса','Юрта','Иглу','Хата'))


app = QApplication([])
window = QWidget()
window.setWindowTitle('Memo Card')
layout_card = QVBoxLayout()

lb_Question = QLabel('Самый сложный вопрос') 
layout_line1 = QHBoxLayout() 
layout_line1.addWidget(lb_Question, alignment=Qt.AlignHCenter)
layout_card.addLayout(layout_line1)

RadioGroupBox = QGroupBox("Варианты ответов") 
layout_line2 = QHBoxLayout() 
layout_line2.addWidget(RadioGroupBox)
layout_card.addLayout(layout_line2)

rbtn_1 = QRadioButton('Вариант 1')
rbtn_2 = QRadioButton('Вариант 2')
rbtn_3 = QRadioButton('Вариант 3')
rbtn_4 = QRadioButton('Вариант 4')

RadioGroup = QButtonGroup()
RadioGroup.addButton(rbtn_1)
RadioGroup.addButton(rbtn_2)
RadioGroup.addButton(rbtn_3)
RadioGroup.addButton(rbtn_4)

layout_ans1 = QHBoxLayout()   
layout_ans2 = QVBoxLayout() 
layout_ans3 = QVBoxLayout()

layout_ans2.addWidget(rbtn_1) 
layout_ans2.addWidget(rbtn_2)
layout_ans3.addWidget(rbtn_3) 
layout_ans3.addWidget(rbtn_4)

layout_ans1.addLayout(layout_ans2)
layout_ans1.addLayout(layout_ans3) 
RadioGroupBox.setLayout(layout_ans1)  

btn_OK = QPushButton('Ответить') 
layout_line3 = QHBoxLayout() 
layout_line3.addWidget(btn_OK) 
layout_card.addLayout(layout_line3)

AnsGroupBox = QGroupBox("Результат теста")
lb_Result = QLabel('прав ты или нет?') 
lb_Correct = QLabel('ответ будет тут!') 

layout_res = QVBoxLayout()
layout_res.addWidget(lb_Result, alignment = Qt.AlignLeft)
layout_res.addWidget(lb_Correct, alignment=Qt.AlignHCenter)
AnsGroupBox.setLayout(layout_res)

layout_line2.addWidget(AnsGroupBox)  
AnsGroupBox.hide() 

def show_result():
    ''' показать панель ответов '''
    RadioGroupBox.hide()
    AnsGroupBox.show()
    btn_OK.setText('Следующий вопрос')
 
def show_question():
    ''' показать панель вопросов '''
    RadioGroupBox.show()
    AnsGroupBox.hide()
    btn_OK.setText('Ответить')
    RadioGroup.setExclusive(False) 
    rbtn_1.setChecked(False)
    rbtn_2.setChecked(False)
    rbtn_3.setChecked(False)
    rbtn_4.setChecked(False)
    RadioGroup.setExclusive(True) 
 
answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]
 
def ask(q: Question):
    ''' функция записывает значения вопроса и ответов в соответствующие виджеты, 
    при этом варианты ответов распределяются случайным образом'''
    shuffle(answers)
    answers[0].setText(q.right_answer)
    answers[1].setText(q.wrong1)
    answers[2].setText(q.wrong2)
    answers[3].setText(q.wrong3)
    lb_Question.setText(q.question)
    lb_Correct.setText(q.right_answer) 
    show_question() 
 
def check_answer():
    if answers[0].isChecked():
        lb_Result.setText('Правильно')
        show_result()
        window.score += 1
    else:
        lb_Result.setText('Неправильно')
        show_result()
    print('Всего вопросов', window.total, 'Правильных ответов', window.score, 'Рейтинг', window.score/window.total*100, '%')

 
def next_question():
    window.total += 1
    window.cur_question = window.cur_question + 1
    if window.cur_question >= len(questions_list):
        window.cur_question = 0
    q = questions_list[window.cur_question]
    ask(q)

def click_OK():
    if btn_OK.text() == "Ответить":
        check_answer()
    else:
        next_question()



window.setLayout(layout_card)

window.cur_question = -1

window.score = 0
window.total = 0


btn_OK.clicked.connect(click_OK) 



next_question()

window.show()
app.exec()
